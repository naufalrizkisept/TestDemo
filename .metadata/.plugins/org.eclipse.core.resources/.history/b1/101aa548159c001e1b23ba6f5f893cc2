package org.project.dao.impl;

import java.util.List;
import java.util.Optional;

import org.project.dao.CompanyDao;
import org.project.entity.CompanyEntity;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

@Repository
public class CompanyDaoImpl implements CompanyDao {

	private final JdbcTemplate jdbcTemplate;
	
	public CompanyDaoImpl(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}
	
	@Override
	public List<CompanyEntity> findAll() {
		String sql = "SELECT * FROM COMPANY_TABLE";
		List<CompanyEntity> queryResult = jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(CompanyEntity.class));
		
		if (queryResult.size() != 0) {
			return queryResult;
		} else {
			return null;
		}
	}

	@Override
	public CompanyEntity findById(Long id) {
		String sql = "SELECT * FROM COMPANY_TABLE WHERE companyId = ?";
		List<CompanyEntity> queryResult = jdbcTemplate.query(sql, new BeanPropertyRowMapper<>(CompanyEntity.class), id);
		Optional<CompanyEntity> findCompany = queryResult.stream()
				.filter(company -> id.equals(company.getCompanyId()))
				.findFirst();
		
		return findCompany.orElse(null);
	}

	@Override
	public CompanyEntity save(CompanyEntity company) {
		String sql = "";
		jdbcTemplate.update(sql, company.getCompanyId(), company.getCompanyName(), company.getCompanyAddress(), company.getIndustryId());
		return company;
	}

	@Override
	public CompanyEntity update(Long id, CompanyEntity company) {
		String sql = "";
		jdbcTemplate.update(sql, company.getCompanyName(), company.getCompanyAddress(), company.getIndustryId(), id);
		return company;
	}

	@Override
	public void delete(Long id) {
		String sql = "";
		jdbcTemplate.update(sql, id);
	}

}
