package org.project.controller;

import java.util.ArrayList;
import java.util.List;

import org.project.dto.UserDto;
import org.project.service.UserSvc;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/users")
public class UserController {
	
	private final UserSvc userSvc;
	
	public UserController(UserSvc userSvc) {
		this.userSvc = userSvc;
	}

	@GetMapping("/all")
	public ResponseEntity<List<UserDto>> getAllUsers() {
		List<UserDto> users = new ArrayList<>();
		users = userSvc.getAllUsers();
		
		return new ResponseEntity<>(users, HttpStatus.OK);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<UserDto> getUserById(@PathVariable Long id) {
		UserDto user = new UserDto();
		user = userSvc.getUserById(id);
		
		return (user != null) ? new ResponseEntity<>(user, HttpStatus.OK) : new ResponseEntity<>(user, HttpStatus.NOT_FOUND);
	}
	
	@PostMapping("/save")
	public ResponseEntity<UserDto> saveUser(@RequestBody UserDto user) {
		UserDto newUser = new UserDto();
		newUser = userSvc.saveUser(user);
		
		return new ResponseEntity<>(newUser, HttpStatus.CREATED);
	}
	
	@PostMapping("/update/{id}")
	public ResponseEntity<UserDto> updateUser(@PathVariable int id, @RequestBody UserDto user) {
		UserDto updatedUser = new UserDto();
		updatedUser = userSvc.updateUser(id, user);
		
		return new ResponseEntity<>(updatedUser, HttpStatus.OK);
	}
	
	@DeleteMapping("/delete/{id}")
	public ResponseEntity<Void> deleteUser(@PathVariable int id) {
		userSvc.deleteUser(id);
		
		return new ResponseEntity<>(HttpStatus.NO_CONTENT);
	}
}
